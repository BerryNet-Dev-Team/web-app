# syntax=docker/dockerfile:1.4
#version: '0'

# devserver.local
services:
  s3:
    build:
      context: ./minio
      dockerfile: Dockerfile
    container_name: minio_s3
    restart: "unless-stopped"
    volumes:
      - /home/images:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL}
    command: server --address :9000 --console-address ":9001" /data
    expose:
      - 9000
      - 9001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live"]
      interval: 500s
      timeout: 10s
      retries: 3
    networks:
      - public
    
  postgres:
    image: postgres:16-bullseye
    container_name: postgresql
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initPg.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    networks:
      - internal

  flask_api:
    build:
      context: ./api-brain-mapper
      dockerfile: Dockerfile
    container_name: flask_api
    restart: unless-stopped
    env_file:
      - ./api-brain-mapper/.env.production
    expose:
      - 5000
    networks:
      - public
      - internal
    depends_on:
      - postgres

  nginx:
    build:
      context: .
      dockerfile: ./nginx/self-signed/Dockerfile
    container_name: nginx_proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/self-signed/certs:/etc/nginx/certs
      - ./nginx/self-signed/ssl-config.conf:/etc/nginx/ssl-config.conf
      - ./nginx/self-signed/default.conf:/etc/nginx/conf.d/default.conf
      #- ${NGINX_CONF_DIR}:/config 
    environment:
      - PUID=${NGINX_CONF_PUID}
      - PGID=${NGINX_CONF_GID}
      - TZ=${TZ}
      - URL=${DOMAIN}
      - VALIDATION=http
      - SUBDOMAINS=www,s3
      - EMAIL=${ADMIN_EMAIL}
    depends_on:
      - flask_api
      - s3
    restart: unless-stopped
    networks:
      - public

networks:
  public:
    driver: bridge
  internal:
    driver: bridge

volumes:
  pgdata: